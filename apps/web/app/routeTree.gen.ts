/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as PasswordResetIndexRouteImport } from './routes/password-reset._index'
import { Route as LayoutIndexRouteImport } from './routes/_layout._index'
import { Route as PasswordResetUpdatePasswordRouteImport } from './routes/password-reset.update-password'
import { Route as LayoutVirtualizedListRouteImport } from './routes/_layout.virtualized-list'
import { Route as LayoutSsrRouteImport } from './routes/_layout.ssr'
import { Route as LayoutDataFetchingRouteImport } from './routes/_layout.data-fetching'
import { Route as LayoutCatalystTestRouteImport } from './routes/_layout.catalyst-test'
import { Route as LayoutParamsIdRouteImport } from './routes/_layout.params.$id'

const PasswordResetRouteImport = createFileRoute('/password-reset')()

const PasswordResetRoute = PasswordResetRouteImport.update({
  id: '/password-reset',
  path: '/password-reset',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const PasswordResetIndexRoute = PasswordResetIndexRouteImport.update({
  id: '/_index',
  getParentRoute: () => PasswordResetRoute,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/_index',
  getParentRoute: () => LayoutRoute,
} as any)
const PasswordResetUpdatePasswordRoute =
  PasswordResetUpdatePasswordRouteImport.update({
    id: '/update-password',
    path: '/update-password',
    getParentRoute: () => PasswordResetRoute,
  } as any)
const LayoutVirtualizedListRoute = LayoutVirtualizedListRouteImport.update({
  id: '/virtualized-list',
  path: '/virtualized-list',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSsrRoute = LayoutSsrRouteImport.update({
  id: '/ssr',
  path: '/ssr',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutDataFetchingRoute = LayoutDataFetchingRouteImport.update({
  id: '/data-fetching',
  path: '/data-fetching',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutCatalystTestRoute = LayoutCatalystTestRouteImport.update({
  id: '/catalyst-test',
  path: '/catalyst-test',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutParamsIdRoute = LayoutParamsIdRouteImport.update({
  id: '/params/$id',
  path: '/params/$id',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/catalyst-test': typeof LayoutCatalystTestRoute
  '/data-fetching': typeof LayoutDataFetchingRoute
  '/ssr': typeof LayoutSsrRoute
  '/virtualized-list': typeof LayoutVirtualizedListRoute
  '/password-reset': typeof PasswordResetIndexRoute
  '/password-reset/update-password': typeof PasswordResetUpdatePasswordRoute
  '/params/$id': typeof LayoutParamsIdRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/catalyst-test': typeof LayoutCatalystTestRoute
  '/data-fetching': typeof LayoutDataFetchingRoute
  '/ssr': typeof LayoutSsrRoute
  '/virtualized-list': typeof LayoutVirtualizedListRoute
  '/password-reset': typeof PasswordResetIndexRoute
  '/password-reset/update-password': typeof PasswordResetUpdatePasswordRoute
  '/params/$id': typeof LayoutParamsIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_layout/_index': typeof LayoutIndexRoute
  '/_layout/catalyst-test': typeof LayoutCatalystTestRoute
  '/_layout/data-fetching': typeof LayoutDataFetchingRoute
  '/_layout/ssr': typeof LayoutSsrRoute
  '/_layout/virtualized-list': typeof LayoutVirtualizedListRoute
  '/password-reset': typeof PasswordResetRouteWithChildren
  '/password-reset/_index': typeof PasswordResetIndexRoute
  '/password-reset/update-password': typeof PasswordResetUpdatePasswordRoute
  '/_layout/params/$id': typeof LayoutParamsIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/sign-in'
    | '/sign-up'
    | '/catalyst-test'
    | '/data-fetching'
    | '/ssr'
    | '/virtualized-list'
    | '/password-reset'
    | '/password-reset/update-password'
    | '/params/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-in'
    | '/sign-up'
    | '/catalyst-test'
    | '/data-fetching'
    | '/ssr'
    | '/virtualized-list'
    | '/password-reset'
    | '/password-reset/update-password'
    | '/params/$id'
  id:
    | '__root__'
    | '/_layout'
    | '/sign-in'
    | '/sign-up'
    | '/_layout/_index'
    | '/_layout/catalyst-test'
    | '/_layout/data-fetching'
    | '/_layout/ssr'
    | '/_layout/virtualized-list'
    | '/password-reset'
    | '/password-reset/_index'
    | '/password-reset/update-password'
    | '/_layout/params/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  PasswordResetRoute: typeof PasswordResetRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/password-reset': {
      id: '/password-reset'
      path: '/password-reset'
      fullPath: '/password-reset'
      preLoaderRoute: typeof PasswordResetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/password-reset/_index': {
      id: '/password-reset/_index'
      path: '/password-reset'
      fullPath: '/password-reset'
      preLoaderRoute: typeof PasswordResetIndexRouteImport
      parentRoute: typeof PasswordResetRoute
    }
    '/_layout/_index': {
      id: '/_layout/_index'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/password-reset/update-password': {
      id: '/password-reset/update-password'
      path: '/update-password'
      fullPath: '/password-reset/update-password'
      preLoaderRoute: typeof PasswordResetUpdatePasswordRouteImport
      parentRoute: typeof PasswordResetRoute
    }
    '/_layout/virtualized-list': {
      id: '/_layout/virtualized-list'
      path: '/virtualized-list'
      fullPath: '/virtualized-list'
      preLoaderRoute: typeof LayoutVirtualizedListRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/ssr': {
      id: '/_layout/ssr'
      path: '/ssr'
      fullPath: '/ssr'
      preLoaderRoute: typeof LayoutSsrRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/data-fetching': {
      id: '/_layout/data-fetching'
      path: '/data-fetching'
      fullPath: '/data-fetching'
      preLoaderRoute: typeof LayoutDataFetchingRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/catalyst-test': {
      id: '/_layout/catalyst-test'
      path: '/catalyst-test'
      fullPath: '/catalyst-test'
      preLoaderRoute: typeof LayoutCatalystTestRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/params/$id': {
      id: '/_layout/params/$id'
      path: '/params/$id'
      fullPath: '/params/$id'
      preLoaderRoute: typeof LayoutParamsIdRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutCatalystTestRoute: typeof LayoutCatalystTestRoute
  LayoutDataFetchingRoute: typeof LayoutDataFetchingRoute
  LayoutSsrRoute: typeof LayoutSsrRoute
  LayoutVirtualizedListRoute: typeof LayoutVirtualizedListRoute
  LayoutParamsIdRoute: typeof LayoutParamsIdRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutCatalystTestRoute: LayoutCatalystTestRoute,
  LayoutDataFetchingRoute: LayoutDataFetchingRoute,
  LayoutSsrRoute: LayoutSsrRoute,
  LayoutVirtualizedListRoute: LayoutVirtualizedListRoute,
  LayoutParamsIdRoute: LayoutParamsIdRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

interface PasswordResetRouteChildren {
  PasswordResetIndexRoute: typeof PasswordResetIndexRoute
  PasswordResetUpdatePasswordRoute: typeof PasswordResetUpdatePasswordRoute
}

const PasswordResetRouteChildren: PasswordResetRouteChildren = {
  PasswordResetIndexRoute: PasswordResetIndexRoute,
  PasswordResetUpdatePasswordRoute: PasswordResetUpdatePasswordRoute,
}

const PasswordResetRouteWithChildren = PasswordResetRoute._addFileChildren(
  PasswordResetRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  PasswordResetRoute: PasswordResetRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
