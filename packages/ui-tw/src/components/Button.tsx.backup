import React from 'react'
import { TouchableOpacity, TouchableOpacityProps, Text, ActivityIndicator } from 'react-native'
import { cn } from '../lib/utils'

interface ButtonProps extends TouchableOpacityProps {
  variant?: 'primary' | 'secondary' | 'ghost' | 'destructive'
  size?: 'sm' | 'md' | 'lg'
  loading?: boolean
  children: React.ReactNode
  className?: string
  textClassName?: string
}

export function Button({
  variant = 'primary',
  size = 'md',
  loading = false,
  children,
  disabled,
  className,
  textClassName,
  ...props
}: ButtonProps) {
  const variants = {
    primary: 'bg-primary-500 active:bg-primary-600',
    secondary: 'bg-secondary-500 active:bg-secondary-600',
    ghost: 'bg-transparent active:bg-gray-100',
    destructive: 'bg-red-500 active:bg-red-600',
  }

  const sizes = {
    sm: 'px-3 py-1.5',
    md: 'px-4 py-2',
    lg: 'px-6 py-3',
  }

  const textSizes = {
    sm: 'text-sm',
    md: 'text-base',
    lg: 'text-lg',
  }

  const textColors = {
    primary: 'text-white',
    secondary: 'text-white',
    ghost: 'text-gray-900',
    destructive: 'text-white',
  }

  return (
    <TouchableOpacity
      className={cn(
        'rounded-lg items-center justify-center',
        variants[variant],
        sizes[size],
        disabled && 'opacity-50',
        className
      )}
      disabled={disabled || loading}
      {...props}
    >
      {loading ? (
        <ActivityIndicator color={variant === 'ghost' ? '#111827' : '#FFFFFF'} size='small' />
      ) : (
        <Text className={cn('font-medium', textSizes[size], textColors[variant], textClassName)}>
          {children}
        </Text>
      )}
    </TouchableOpacity>
  )
}
